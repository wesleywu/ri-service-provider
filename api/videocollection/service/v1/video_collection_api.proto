syntax = "proto3";

package v1;

option go_package = "github.com/wesleywu/ri-service-provider/api/videocollection/service/v1;v1";
option java_multiple_files = true;
option java_package = "repo.video_collection.v1";
option java_outer_classname = "VideoCollectionV1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "tagger/tagger.proto";
import "goguru/annotations/annotations.proto";
import "goguru/query/condition.proto";
import "goguru/query/query.proto";
import "goguru/types/objectid.proto";
import "app/videocollection/service/proto/video_collection_repo.proto";

service VideoCollection {
  rpc Count (proto.VideoCollectionCountReq) returns (proto.VideoCollectionCountRes){
    option (google.api.http) = {
      post: "/v1/video-collection/count",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
      name: "VideoCollection",
      ttl: "30s",
      key: "",
    };
  }
  rpc One (proto.VideoCollectionOneReq) returns (proto.VideoCollectionOneRes){
    option (google.api.http) = {
      post: "/v1/video-collection/one",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
      name: "VideoCollection",
      ttl: "30s",
      key: "",
    };
  }
  rpc List (proto.VideoCollectionListReq) returns (proto.VideoCollectionListRes){
    option (google.api.http) = {
      post: "/v1/video-collection/list",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
      name: "VideoCollection",
      ttl: "30s",
      key: "",
    };
  }
  rpc Get (proto.VideoCollectionGetReq) returns (proto.VideoCollectionGetRes){
    option (google.api.http) = {
      get: "/v1/video-collection/{id}",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
  rpc Create (proto.VideoCollectionCreateReq) returns (proto.VideoCollectionCreateRes){
    option (google.api.http) = {
      post: "/v1/video-collection",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
  rpc Update (proto.VideoCollectionUpdateReq) returns (proto.VideoCollectionUpdateRes){
    option (google.api.http) = {
      patch: "/v1/video-collection/{id}",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
  rpc Upsert (proto.VideoCollectionUpsertReq) returns (proto.VideoCollectionUpsertRes){
    option (google.api.http) = {
      put: "/v1/video-collection/{id}",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
  rpc Delete (proto.VideoCollectionDeleteReq) returns (proto.VideoCollectionDeleteRes){
    option (google.api.http) = {
      delete: "/v1/video-collection/{id}",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
  rpc DeleteMulti (proto.VideoCollectionDeleteMultiReq) returns (proto.VideoCollectionDeleteMultiRes){
    option (google.api.http) = {
      post: "/v1/video-collection/delete",
      body: "*",
    };
    option (goguru.annotations.cache) = {
      cachable: false,
    };
  }
}
