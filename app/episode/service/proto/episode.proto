syntax = "proto3";

package proto;

option go_package = "github.com/wesleywu/ri-service-provider/app/episode/service/proto;proto";
option java_multiple_files = true;
option java_package = "repo.video_collection.v1";
option java_outer_classname = "EpisodeV1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "tagger/tagger.proto";
import "goguru/cache/annotations.proto";
import "goguru/orm/annotations.proto";
import "goguru/orm/condition.proto";
import "goguru/orm/query.proto";
import "app/episode/service/enum/episode_enum.proto";

message Episode {
  option (goguru.orm.collection) = {
    collection_name:    "episode",
    use_id_obfuscating: false,
    use_bson_timestamp: false,
    indices: [
      {
        fields: [
          {
            field: "$**",
            type: AscIndex,
          }
        ],
        unique: false,
      },
      {
        fields: [
          {
            field: "$**",
            type: TextIndex,
          }
        ],
        unique: false,
      }
    ]
  };
  string                      id                  = 1    [
    (tagger.tags) = "json:\"id,omitempty\"",
    (goguru.orm.field) = {field_name:"_id", is_object_id:true, description:"编号", required:true}
  ];
  optional string                      name                = 2    [
    (tagger.tags) = "json:\"name,omitempty\"",
    (goguru.orm.field) = {description:"单集名称", required:true}
  ];
  optional ContentType                 content_type        = 3    [
    (tagger.tags) = "json:\"contentType,omitempty\"",
    (goguru.orm.field) = {description:"内容类型", required:true}
  ];
  optional FilterType                  filter_type         = 4    [
    (tagger.tags) = "json:\"filterType,omitempty\"",
    (goguru.orm.field) = {description:"审核方式", required:true}
  ];
  optional int32                       count               = 5    [
    (tagger.tags) = "json:\"count,omitempty\"",
    (goguru.orm.field) = {description:"收听数", required:true}
  ];
  optional bool                        is_online           = 6    [
    (tagger.tags) = "json:\"isOnline,omitempty\"",
    (goguru.orm.field) = {description:"是否上线", required:true}
  ];
  repeated string                      keywords            = 7    [
    (tagger.tags) = "json:\"keywords,omitempty\"",
    (goguru.orm.field) = {description:"内容关键词"}
  ];
  map<string, string>                  outlines            = 8    [
    (tagger.tags) = "json:\"outlines,omitempty\"",
    (goguru.orm.field) = {description:"内容大纲"}
  ];
  repeated QuestionAnswer              qas                 = 9    [
    (tagger.tags) = "json:\"qas,omitempty\"",
    (goguru.orm.field) = {description:"QA问答"}
  ];
  optional google.protobuf.Timestamp   created_at          = 101  [
    (tagger.tags) = "json:\"createdAt,omitempty\"",
    (goguru.orm.field) = {description:"创建时间"}
  ];
  optional google.protobuf.Timestamp   updated_at          = 102  [
    (tagger.tags) = "json:\"updatedAt,omitempty\"",
    (goguru.orm.field) = {description:"更新时间"}
  ];
}

message QuestionAnswer {
  optional google.protobuf.Duration    start_time          = 1    [(tagger.tags) = "bson:\"start_time,omitempty\" json:\"startTime,omitempty\""];
  optional google.protobuf.Duration    end_time            = 2    [(tagger.tags) = "bson:\"end_time,omitempty\" json:\"endTime,omitempty\""];
  optional string                      question            = 3    [(tagger.tags) = "bson:\"question,omitempty\" json:\"question,omitempty\""];
  optional string                      answer              = 4    [(tagger.tags) = "bson:\"answer,omitempty\" json:\"answer,omitempty\""];
}

service EpisodeRepo {
  rpc Count (proto.EpisodeCountReq)                        returns (proto.EpisodeCountRes);
  rpc One (proto.EpisodeOneReq)                            returns (proto.EpisodeOneRes);
  rpc List (proto.EpisodeListReq)                          returns (proto.EpisodeListRes);
  rpc Get (proto.EpisodeGetReq)                            returns (proto.EpisodeGetRes);
  rpc Create (proto.EpisodeCreateReq)                      returns (proto.EpisodeCreateRes);
  rpc Update (proto.EpisodeUpdateReq)                      returns (proto.EpisodeUpdateRes);
  rpc Upsert (proto.EpisodeUpsertReq)                      returns (proto.EpisodeUpsertRes);
  rpc Delete (proto.EpisodeDeleteReq)                      returns (proto.EpisodeDeleteRes);
  rpc DeleteMulti (proto.EpisodeDeleteMultiReq)            returns (proto.EpisodeDeleteMultiRes);
}

message EpisodeCountReq {
  message Test {
    string name = 1;
  }
  google.protobuf.Any                  id                  = 1    [(tagger.tags) = "json:\"id,omitempty\""];
  google.protobuf.Any                  name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  google.protobuf.Any                  content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  google.protobuf.Any                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  google.protobuf.Any                  count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  google.protobuf.Any                  is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  google.protobuf.Any                  keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  google.protobuf.Any                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  google.protobuf.Any                  qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  google.protobuf.Any                  created_at          = 101  [(tagger.tags) = "json:\"createdAt,omitempty\""];
  google.protobuf.Any                  updated_at          = 102  [(tagger.tags) = "json:\"updatedAt,omitempty\""];
  repeated goguru.orm.PropertyFilter   extra_filters       = 1001 [(tagger.tags) = "json:\"extraFilters,omitempty\""];
}

message EpisodeCountRes {
  int64                                totalElements       = 1    [(tagger.tags) = "json:\"total\""];
}

message EpisodeOneReq {
  google.protobuf.Any                  id                  = 1    [(tagger.tags) = "json:\"id,omitempty\""];
  google.protobuf.Any                  name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  google.protobuf.Any                  content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  google.protobuf.Any                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  google.protobuf.Any                  count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  google.protobuf.Any                  is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  google.protobuf.Any                  keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  google.protobuf.Any                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  google.protobuf.Any                  qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  google.protobuf.Any                  created_at          = 101  [(tagger.tags) = "json:\"createdAt,omitempty\""];
  google.protobuf.Any                  updated_at          = 102  [(tagger.tags) = "json:\"updatedAt,omitempty\""];
  repeated goguru.orm.PropertyFilter   extra_filters       = 1001 [(tagger.tags) = "json:\"extraFilters,omitempty\""];
  goguru.orm.PageRequest               page_request        = 1002 [(tagger.tags) = "json:\"pageRequest,omitempty\""];
  repeated string                      fields_included     = 1003 [(tagger.tags) = "json:\"fieldsIncluded,omitempty\""];}

message EpisodeOneRes {
  bool                                 found               = 1;
  optional Episode                     item                = 2;
}

message EpisodeListReq {
  google.protobuf.Any                  id                  = 1    [(tagger.tags) = "json:\"id,omitempty\""];
  google.protobuf.Any                  name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  google.protobuf.Any                  content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  google.protobuf.Any                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  google.protobuf.Any                  count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  google.protobuf.Any                  is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  google.protobuf.Any                  keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  google.protobuf.Any                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  google.protobuf.Any                  qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  google.protobuf.Any                  created_at          = 101  [(tagger.tags) = "json:\"createdAt,omitempty\""];
  google.protobuf.Any                  updated_at          = 102  [(tagger.tags) = "json:\"updatedAt,omitempty\""];
  repeated goguru.orm.PropertyFilter   extra_filters       = 1001 [(tagger.tags) = "json:\"extraFilters,omitempty\""];
  goguru.orm.PageRequest               page_request        = 1002 [(tagger.tags) = "json:\"pageRequest,omitempty\""];
  repeated string                      fields_included     = 1003 [(tagger.tags) = "json:\"fieldsIncluded,omitempty\""];
}

message EpisodeListRes {
  goguru.orm.PageInfo                  pageInfo            = 1    [(tagger.tags) = "json:\"pageInfo\""];
  repeated Episode                     items               = 2    [(tagger.tags) = "json:\"items\""];
}

message EpisodeGetReq {
  string                               id                  = 1    [(tagger.tags) = "json:\"id\""];
}

message EpisodeGetRes {
  option (goguru.orm.output_unmarshal_bson) = true;
  string                               id                  = 1    [(tagger.tags) = "json:\"id,omitempty\""];
  optional string                      name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  optional ContentType                 content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  optional FilterType                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  optional int32                       count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  optional bool                        is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  repeated string                      keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  map<string, string>                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  repeated QuestionAnswer              qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  optional google.protobuf.Timestamp   created_at          = 101  [(tagger.tags) = "bson:\"created_at,omitempty\" json:\"createdAt,omitempty\""];
  optional google.protobuf.Timestamp   updated_at          = 102  [(tagger.tags) = "bson:\"updated_at,omitempty\" json:\"updatedAt,omitempty\""];
}

message EpisodeCreateReq {
  option (goguru.orm.input_marshal_bson) = true;
  optional string                      name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  optional ContentType                 content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  optional FilterType                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  optional int32                       count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  optional bool                        is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  repeated string                      keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  map<string, string>                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  repeated QuestionAnswer              qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  optional google.protobuf.Timestamp   created_at          = 101  [(tagger.tags) = "bson:\"created_at,omitempty\" json:\"createdAt,omitempty\""];
  optional google.protobuf.Timestamp   updated_at          = 102  [(tagger.tags) = "bson:\"updated_at,omitempty\" json:\"updatedAt,omitempty\""];
}

message EpisodeCreateRes {
  string                               message             = 1    [(tagger.tags) = "json:\"message\""];
  optional string                      inserted_id         = 2    [(tagger.tags) = "json:\"insertedId\""];
  int64                                inserted_count      = 3    [(tagger.tags) = "json:\"insertedCount\""];
}

message EpisodeUpdateReq {
  option (goguru.orm.input_marshal_bson) = true;
  string                               id                  = 1    [(tagger.tags) = "json:\"id\""];
  optional string                      name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  optional ContentType                 content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  optional FilterType                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  optional int32                       count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  optional bool                        is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  repeated string                      keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  map<string, string>                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  repeated QuestionAnswer              qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  optional google.protobuf.Timestamp   created_at          = 101  [(tagger.tags) = "bson:\"created_at,omitempty\" json:\"createdAt,omitempty\""];
  optional google.protobuf.Timestamp   updated_at          = 102  [(tagger.tags) = "bson:\"updated_at,omitempty\" json:\"updatedAt,omitempty\""];
}

message EpisodeUpdateRes {
  string                               message             = 1    [(tagger.tags) = "json:\"message\""];
  int64                                matched_count       = 2    [(tagger.tags) = "json:\"matchedCount\""]; // The number of documents matched by the upsert operation
  int64                                modified_count      = 3    [(tagger.tags) = "json:\"modifiedCount\""]; // The number of documents modified by the operation.
}

message EpisodeUpsertReq {
  option (goguru.orm.input_marshal_bson) = true;
  string                               id                  = 1    [(tagger.tags) = "json:\"id\""];
  optional string                      name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  optional ContentType                 content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  optional FilterType                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  optional int32                       count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  optional bool                        is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  repeated string                      keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  map<string, string>                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  repeated QuestionAnswer              qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  optional google.protobuf.Timestamp   created_at          = 101  [(tagger.tags) = "bson:\"created_at,omitempty\" json:\"createdAt,omitempty\""];
  optional google.protobuf.Timestamp   updated_at          = 102  [(tagger.tags) = "bson:\"updated_at,omitempty\" json:\"updatedAt,omitempty\""];
}

message EpisodeUpsertRes {
  string                               message             = 1    [(tagger.tags) = "json:\"message\""];
  optional string                      upserted_id         = 2    [(tagger.tags) = "json:\"upsertedId\""];
  int64                                matched_count       = 3    [(tagger.tags) = "json:\"matchedCount\""]; // The number of documents matched by the upsert operation
  int64                                modified_count      = 4    [(tagger.tags) = "json:\"modifiedCount\""]; // The number of documents modified by the operation.
  int64                                upserted_count      = 5    [(tagger.tags) = "json:\"upsertedCount\""]; // The number of documents upserted by the operation.
}

message EpisodeDeleteReq {
  string                               id                  = 1    [(tagger.tags) = "json:\"id\""];
}

message EpisodeDeleteRes {
  string                               message             = 1    [(tagger.tags) = "json:\"message\""];
  int64                                deleted_count       = 2    [(tagger.tags) = "json:\"deletedCount\""];
}

message EpisodeDeleteMultiReq {
  google.protobuf.Any                  id                  = 1    [(tagger.tags) = "json:\"id,omitempty\""];
  google.protobuf.Any                  name                = 2    [(tagger.tags) = "json:\"name,omitempty\""];
  google.protobuf.Any                  content_type        = 3    [(tagger.tags) = "json:\"contentType,omitempty\""];
  google.protobuf.Any                  filter_type         = 4    [(tagger.tags) = "json:\"filterType,omitempty\""];
  google.protobuf.Any                  count               = 5    [(tagger.tags) = "json:\"count,omitempty\""];
  google.protobuf.Any                  is_online           = 6    [(tagger.tags) = "json:\"isOnline,omitempty\""];
  google.protobuf.Any                  keywords            = 7    [(tagger.tags) = "json:\"keywords,omitempty\""];
  google.protobuf.Any                  outlines            = 8    [(tagger.tags) = "json:\"outlines,omitempty\""];
  google.protobuf.Any                  qas                 = 9    [(tagger.tags) = "json:\"qas,omitempty\""];
  google.protobuf.Any                  created_at          = 101  [(tagger.tags) = "json:\"createdAt,omitempty\""];
  google.protobuf.Any                  updated_at          = 102  [(tagger.tags) = "json:\"updatedAt,omitempty\""];
  repeated goguru.orm.PropertyFilter   extra_filters       = 1001 [(tagger.tags) = "json:\"extraFilters,omitempty\""];
}

message EpisodeDeleteMultiRes {
  string                               message             = 1    [(tagger.tags) = "json:\"message\""];
  int64                                deleted_count       = 2    [(tagger.tags) = "json:\"deletedCount\""];
}