// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: app/videocollection/service/proto/video_collection_repo.proto

package proto

import (
	_ "github.com/castbox/go-guru/pkg/goguru/annotations"
	query "github.com/castbox/go-guru/pkg/goguru/query"
	types "github.com/castbox/go-guru/pkg/goguru/types"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	enum "github.com/wesleywu/ri-service-provider/app/videocollection/service/enum"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoCollectionCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *anypb.Any              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *anypb.Any              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContentType  *anypb.Any              `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	FilterType   *anypb.Any              `protobuf:"bytes,4,opt,name=filterType,proto3" json:"filterType,omitempty"`
	Count        *anypb.Any              `protobuf:"bytes,5,opt,name=count,proto3" json:"count,omitempty"`
	IsOnline     *anypb.Any              `protobuf:"bytes,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	CreatedAt    *anypb.Any              `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *anypb.Any              `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ExtraFilters []*query.PropertyFilter `protobuf:"bytes,1001,rep,name=extraFilters,proto3" json:"extraFilters,omitempty"`
}

func (x *VideoCollectionCountReq) Reset() {
	*x = VideoCollectionCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionCountReq) ProtoMessage() {}

func (x *VideoCollectionCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionCountReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionCountReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{0}
}

func (x *VideoCollectionCountReq) GetId() *anypb.Any {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VideoCollectionCountReq) GetName() *anypb.Any {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *VideoCollectionCountReq) GetContentType() *anypb.Any {
	if x != nil {
		return x.ContentType
	}
	return nil
}

func (x *VideoCollectionCountReq) GetFilterType() *anypb.Any {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *VideoCollectionCountReq) GetCount() *anypb.Any {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *VideoCollectionCountReq) GetIsOnline() *anypb.Any {
	if x != nil {
		return x.IsOnline
	}
	return nil
}

func (x *VideoCollectionCountReq) GetCreatedAt() *anypb.Any {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionCountReq) GetUpdatedAt() *anypb.Any {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VideoCollectionCountReq) GetExtraFilters() []*query.PropertyFilter {
	if x != nil {
		return x.ExtraFilters
	}
	return nil
}

type VideoCollectionCountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalElements int64 `protobuf:"varint,1,opt,name=totalElements,proto3" json:"total"`
}

func (x *VideoCollectionCountRes) Reset() {
	*x = VideoCollectionCountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionCountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionCountRes) ProtoMessage() {}

func (x *VideoCollectionCountRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionCountRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionCountRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{1}
}

func (x *VideoCollectionCountRes) GetTotalElements() int64 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

type VideoCollectionOneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *anypb.Any              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *anypb.Any              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContentType  *anypb.Any              `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	FilterType   *anypb.Any              `protobuf:"bytes,4,opt,name=filterType,proto3" json:"filterType,omitempty"`
	Count        *anypb.Any              `protobuf:"bytes,5,opt,name=count,proto3" json:"count,omitempty"`
	IsOnline     *anypb.Any              `protobuf:"bytes,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	CreatedAt    *anypb.Any              `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *anypb.Any              `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ExtraFilters []*query.PropertyFilter `protobuf:"bytes,1001,rep,name=extraFilters,proto3" json:"extraFilters,omitempty"`
}

func (x *VideoCollectionOneReq) Reset() {
	*x = VideoCollectionOneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionOneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionOneReq) ProtoMessage() {}

func (x *VideoCollectionOneReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionOneReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionOneReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{2}
}

func (x *VideoCollectionOneReq) GetId() *anypb.Any {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VideoCollectionOneReq) GetName() *anypb.Any {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *VideoCollectionOneReq) GetContentType() *anypb.Any {
	if x != nil {
		return x.ContentType
	}
	return nil
}

func (x *VideoCollectionOneReq) GetFilterType() *anypb.Any {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *VideoCollectionOneReq) GetCount() *anypb.Any {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *VideoCollectionOneReq) GetIsOnline() *anypb.Any {
	if x != nil {
		return x.IsOnline
	}
	return nil
}

func (x *VideoCollectionOneReq) GetCreatedAt() *anypb.Any {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionOneReq) GetUpdatedAt() *anypb.Any {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VideoCollectionOneReq) GetExtraFilters() []*query.PropertyFilter {
	if x != nil {
		return x.ExtraFilters
	}
	return nil
}

type VideoCollectionOneRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool                 `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Item  *VideoCollectionItem `protobuf:"bytes,2,opt,name=item,proto3,oneof" json:"item,omitempty"`
}

func (x *VideoCollectionOneRes) Reset() {
	*x = VideoCollectionOneRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionOneRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionOneRes) ProtoMessage() {}

func (x *VideoCollectionOneRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionOneRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionOneRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{3}
}

func (x *VideoCollectionOneRes) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *VideoCollectionOneRes) GetItem() *VideoCollectionItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type VideoCollectionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *anypb.Any              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *anypb.Any              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContentType  *anypb.Any              `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	FilterType   *anypb.Any              `protobuf:"bytes,4,opt,name=filterType,proto3" json:"filterType,omitempty"`
	Count        *anypb.Any              `protobuf:"bytes,5,opt,name=count,proto3" json:"count,omitempty"`
	IsOnline     *anypb.Any              `protobuf:"bytes,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	CreatedAt    *anypb.Any              `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *anypb.Any              `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ExtraFilters []*query.PropertyFilter `protobuf:"bytes,1001,rep,name=extraFilters,proto3" json:"extraFilters,omitempty"`
	PageRequest  *query.PageRequest      `protobuf:"bytes,1002,opt,name=pageRequest,proto3" json:"pageRequest,omitempty"`
}

func (x *VideoCollectionListReq) Reset() {
	*x = VideoCollectionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionListReq) ProtoMessage() {}

func (x *VideoCollectionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionListReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionListReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{4}
}

func (x *VideoCollectionListReq) GetId() *anypb.Any {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VideoCollectionListReq) GetName() *anypb.Any {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *VideoCollectionListReq) GetContentType() *anypb.Any {
	if x != nil {
		return x.ContentType
	}
	return nil
}

func (x *VideoCollectionListReq) GetFilterType() *anypb.Any {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *VideoCollectionListReq) GetCount() *anypb.Any {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *VideoCollectionListReq) GetIsOnline() *anypb.Any {
	if x != nil {
		return x.IsOnline
	}
	return nil
}

func (x *VideoCollectionListReq) GetCreatedAt() *anypb.Any {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionListReq) GetUpdatedAt() *anypb.Any {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VideoCollectionListReq) GetExtraFilters() []*query.PropertyFilter {
	if x != nil {
		return x.ExtraFilters
	}
	return nil
}

func (x *VideoCollectionListReq) GetPageRequest() *query.PageRequest {
	if x != nil {
		return x.PageRequest
	}
	return nil
}

type VideoCollectionListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *query.PageInfo        `protobuf:"bytes,1,opt,name=pageInfo,proto3" json:"pageInfo"`
	Items    []*VideoCollectionItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *VideoCollectionListRes) Reset() {
	*x = VideoCollectionListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionListRes) ProtoMessage() {}

func (x *VideoCollectionListRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionListRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionListRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{5}
}

func (x *VideoCollectionListRes) GetPageInfo() *query.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *VideoCollectionListRes) GetItems() []*VideoCollectionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type VideoCollectionGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"-"`
}

func (x *VideoCollectionGetReq) Reset() {
	*x = VideoCollectionGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionGetReq) ProtoMessage() {}

func (x *VideoCollectionGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionGetReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionGetReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{6}
}

func (x *VideoCollectionGetReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VideoCollectionGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *types.ObjectID        `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" bson:"_id,omitempty"`
	Name        *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty" bson:"name,omitempty"`
	ContentType *enum.ContentType      `protobuf:"varint,3,opt,name=contentType,proto3,enum=proto.ContentType,oneof" json:"contentType,omitempty" bson:"contentType,omitempty"`
	FilterType  *enum.FilterType       `protobuf:"varint,4,opt,name=filterType,proto3,enum=proto.FilterType,oneof" json:"filterType,omitempty" bson:"filterType,omitempty"`
	Count       *uint32                `protobuf:"varint,5,opt,name=count,proto3,oneof" json:"count,omitempty" bson:"count,omitempty"`
	IsOnline    *bool                  `protobuf:"varint,6,opt,name=isOnline,proto3,oneof" json:"isOnline,omitempty" bson:"isOnline,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3,oneof" json:"createdAt,omitempty" bson:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty" bson:"updatedAt,omitempty"`
}

func (x *VideoCollectionGetRes) Reset() {
	*x = VideoCollectionGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionGetRes) ProtoMessage() {}

func (x *VideoCollectionGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionGetRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionGetRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{7}
}

func (x *VideoCollectionGetRes) GetId() *types.ObjectID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VideoCollectionGetRes) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VideoCollectionGetRes) GetContentType() enum.ContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return enum.ContentType(0)
}

func (x *VideoCollectionGetRes) GetFilterType() enum.FilterType {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return enum.FilterType(0)
}

func (x *VideoCollectionGetRes) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *VideoCollectionGetRes) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *VideoCollectionGetRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionGetRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VideoCollectionCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty" bson:"name,omitempty"`
	ContentType *enum.ContentType      `protobuf:"varint,3,opt,name=contentType,proto3,enum=proto.ContentType,oneof" json:"contentType,omitempty" bson:"contentType,omitempty"`
	FilterType  *enum.FilterType       `protobuf:"varint,4,opt,name=filterType,proto3,enum=proto.FilterType,oneof" json:"filterType,omitempty" bson:"filterType,omitempty"`
	Count       *uint32                `protobuf:"varint,5,opt,name=count,proto3,oneof" json:"count,omitempty" bson:"count,omitempty"`
	IsOnline    *bool                  `protobuf:"varint,6,opt,name=isOnline,proto3,oneof" json:"isOnline,omitempty" bson:"isOnline,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3,oneof" json:"createdAt,omitempty" bson:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty" bson:"updatedAt,omitempty"`
}

func (x *VideoCollectionCreateReq) Reset() {
	*x = VideoCollectionCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionCreateReq) ProtoMessage() {}

func (x *VideoCollectionCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionCreateReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionCreateReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{8}
}

func (x *VideoCollectionCreateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VideoCollectionCreateReq) GetContentType() enum.ContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return enum.ContentType(0)
}

func (x *VideoCollectionCreateReq) GetFilterType() enum.FilterType {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return enum.FilterType(0)
}

func (x *VideoCollectionCreateReq) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *VideoCollectionCreateReq) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *VideoCollectionCreateReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionCreateReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VideoCollectionCreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string  `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	InsertedID    *string `protobuf:"bytes,2,opt,name=insertedID,proto3,oneof" json:"insertedID"`
	InsertedCount int64   `protobuf:"varint,3,opt,name=insertedCount,proto3" json:"insertedCount"`
}

func (x *VideoCollectionCreateRes) Reset() {
	*x = VideoCollectionCreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionCreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionCreateRes) ProtoMessage() {}

func (x *VideoCollectionCreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionCreateRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionCreateRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{9}
}

func (x *VideoCollectionCreateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VideoCollectionCreateRes) GetInsertedID() string {
	if x != nil && x.InsertedID != nil {
		return *x.InsertedID
	}
	return ""
}

func (x *VideoCollectionCreateRes) GetInsertedCount() int64 {
	if x != nil {
		return x.InsertedCount
	}
	return 0
}

type VideoCollectionUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"-"`
	Name        *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty" bson:"name,omitempty"`
	ContentType *enum.ContentType      `protobuf:"varint,3,opt,name=contentType,proto3,enum=proto.ContentType,oneof" json:"contentType,omitempty" bson:"contentType,omitempty"`
	FilterType  *enum.FilterType       `protobuf:"varint,4,opt,name=filterType,proto3,enum=proto.FilterType,oneof" json:"filterType,omitempty" bson:"filterType,omitempty"`
	Count       *uint32                `protobuf:"varint,5,opt,name=count,proto3,oneof" json:"count,omitempty" bson:"count,omitempty"`
	IsOnline    *bool                  `protobuf:"varint,6,opt,name=isOnline,proto3,oneof" json:"isOnline,omitempty" bson:"isOnline,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3,oneof" json:"createdAt,omitempty" bson:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty" bson:"updatedAt,omitempty"`
}

func (x *VideoCollectionUpdateReq) Reset() {
	*x = VideoCollectionUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionUpdateReq) ProtoMessage() {}

func (x *VideoCollectionUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionUpdateReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionUpdateReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{10}
}

func (x *VideoCollectionUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoCollectionUpdateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VideoCollectionUpdateReq) GetContentType() enum.ContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return enum.ContentType(0)
}

func (x *VideoCollectionUpdateReq) GetFilterType() enum.FilterType {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return enum.FilterType(0)
}

func (x *VideoCollectionUpdateReq) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *VideoCollectionUpdateReq) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *VideoCollectionUpdateReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionUpdateReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VideoCollectionUpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	MatchedCount  int64  `protobuf:"varint,3,opt,name=matchedCount,proto3" json:"matchedCount"`   // The number of documents matched by the upsert operation
	ModifiedCount int64  `protobuf:"varint,4,opt,name=modifiedCount,proto3" json:"modifiedCount"` // The number of documents modified by the operation.
}

func (x *VideoCollectionUpdateRes) Reset() {
	*x = VideoCollectionUpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionUpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionUpdateRes) ProtoMessage() {}

func (x *VideoCollectionUpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionUpdateRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionUpdateRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{11}
}

func (x *VideoCollectionUpdateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VideoCollectionUpdateRes) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *VideoCollectionUpdateRes) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

type VideoCollectionUpsertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"-"`
	Name        *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty" bson:"name,omitempty"`
	ContentType *enum.ContentType      `protobuf:"varint,3,opt,name=contentType,proto3,enum=proto.ContentType,oneof" json:"contentType,omitempty" bson:"contentType,omitempty"`
	FilterType  *enum.FilterType       `protobuf:"varint,4,opt,name=filterType,proto3,enum=proto.FilterType,oneof" json:"filterType,omitempty" bson:"filterType,omitempty"`
	Count       *uint32                `protobuf:"varint,5,opt,name=count,proto3,oneof" json:"count,omitempty" bson:"count,omitempty"`
	IsOnline    *bool                  `protobuf:"varint,6,opt,name=isOnline,proto3,oneof" json:"isOnline,omitempty" bson:"isOnline,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3,oneof" json:"createdAt,omitempty" bson:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty" bson:"updatedAt,omitempty"`
}

func (x *VideoCollectionUpsertReq) Reset() {
	*x = VideoCollectionUpsertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionUpsertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionUpsertReq) ProtoMessage() {}

func (x *VideoCollectionUpsertReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionUpsertReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionUpsertReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{12}
}

func (x *VideoCollectionUpsertReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoCollectionUpsertReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VideoCollectionUpsertReq) GetContentType() enum.ContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return enum.ContentType(0)
}

func (x *VideoCollectionUpsertReq) GetFilterType() enum.FilterType {
	if x != nil && x.FilterType != nil {
		return *x.FilterType
	}
	return enum.FilterType(0)
}

func (x *VideoCollectionUpsertReq) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *VideoCollectionUpsertReq) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *VideoCollectionUpsertReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionUpsertReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VideoCollectionUpsertRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string  `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	UpsertedID    *string `protobuf:"bytes,2,opt,name=upsertedID,proto3,oneof" json:"upsertedID"`
	MatchedCount  int64   `protobuf:"varint,3,opt,name=matchedCount,proto3" json:"matchedCount"`   // The number of documents matched by the upsert operation
	ModifiedCount int64   `protobuf:"varint,4,opt,name=modifiedCount,proto3" json:"modifiedCount"` // The number of documents modified by the operation.
	UpsertedCount int64   `protobuf:"varint,5,opt,name=upsertedCount,proto3" json:"upsertedCount"` // The number of documents upserted by the operation.
}

func (x *VideoCollectionUpsertRes) Reset() {
	*x = VideoCollectionUpsertRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionUpsertRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionUpsertRes) ProtoMessage() {}

func (x *VideoCollectionUpsertRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionUpsertRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionUpsertRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{13}
}

func (x *VideoCollectionUpsertRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VideoCollectionUpsertRes) GetUpsertedID() string {
	if x != nil && x.UpsertedID != nil {
		return *x.UpsertedID
	}
	return ""
}

func (x *VideoCollectionUpsertRes) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *VideoCollectionUpsertRes) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

func (x *VideoCollectionUpsertRes) GetUpsertedCount() int64 {
	if x != nil {
		return x.UpsertedCount
	}
	return 0
}

type VideoCollectionDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"-"`
}

func (x *VideoCollectionDeleteReq) Reset() {
	*x = VideoCollectionDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionDeleteReq) ProtoMessage() {}

func (x *VideoCollectionDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionDeleteReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionDeleteReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{14}
}

func (x *VideoCollectionDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VideoCollectionDeleteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	DeletedCount int64  `protobuf:"varint,3,opt,name=deletedCount,proto3" json:"deletedCount"`
}

func (x *VideoCollectionDeleteRes) Reset() {
	*x = VideoCollectionDeleteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionDeleteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionDeleteRes) ProtoMessage() {}

func (x *VideoCollectionDeleteRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionDeleteRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionDeleteRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{15}
}

func (x *VideoCollectionDeleteRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VideoCollectionDeleteRes) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

type VideoCollectionDeleteMultiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *anypb.Any              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *anypb.Any              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContentType  *anypb.Any              `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	FilterType   *anypb.Any              `protobuf:"bytes,4,opt,name=filterType,proto3" json:"filterType,omitempty"`
	Count        *anypb.Any              `protobuf:"bytes,5,opt,name=count,proto3" json:"count,omitempty"`
	IsOnline     *anypb.Any              `protobuf:"bytes,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	CreatedAt    *anypb.Any              `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *anypb.Any              `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ExtraFilters []*query.PropertyFilter `protobuf:"bytes,1001,rep,name=extraFilters,proto3" json:"extraFilters,omitempty"`
}

func (x *VideoCollectionDeleteMultiReq) Reset() {
	*x = VideoCollectionDeleteMultiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionDeleteMultiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionDeleteMultiReq) ProtoMessage() {}

func (x *VideoCollectionDeleteMultiReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionDeleteMultiReq.ProtoReflect.Descriptor instead.
func (*VideoCollectionDeleteMultiReq) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{16}
}

func (x *VideoCollectionDeleteMultiReq) GetId() *anypb.Any {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetName() *anypb.Any {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetContentType() *anypb.Any {
	if x != nil {
		return x.ContentType
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetFilterType() *anypb.Any {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetCount() *anypb.Any {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetIsOnline() *anypb.Any {
	if x != nil {
		return x.IsOnline
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetCreatedAt() *anypb.Any {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetUpdatedAt() *anypb.Any {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VideoCollectionDeleteMultiReq) GetExtraFilters() []*query.PropertyFilter {
	if x != nil {
		return x.ExtraFilters
	}
	return nil
}

type VideoCollectionDeleteMultiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	DeletedCount int64  `protobuf:"varint,3,opt,name=deletedCount,proto3" json:"deletedCount"`
}

func (x *VideoCollectionDeleteMultiRes) Reset() {
	*x = VideoCollectionDeleteMultiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCollectionDeleteMultiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCollectionDeleteMultiRes) ProtoMessage() {}

func (x *VideoCollectionDeleteMultiRes) ProtoReflect() protoreflect.Message {
	mi := &file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCollectionDeleteMultiRes.ProtoReflect.Descriptor instead.
func (*VideoCollectionDeleteMultiRes) Descriptor() ([]byte, []int) {
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP(), []int{17}
}

func (x *VideoCollectionDeleteMultiRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VideoCollectionDeleteMultiRes) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

var File_app_videocollection_service_proto_video_collection_repo_proto protoreflect.FileDescriptor

var file_app_videocollection_service_proto_video_collection_repo_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x67,
	0x75, 0x72, 0x75, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x6f, 0x67, 0x75, 0x72,
	0x75, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3c, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38,
	0x61, 0x70, 0x70, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x03, 0x0a, 0x17, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30,
	0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x32, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x17, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0x9a,
	0x84, 0x9e, 0x03, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xde, 0x03, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0xe9, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x6b, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9d, 0x04,
	0x0a, 0x16, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0xe9, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x3c, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xea,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa7, 0x01,
	0x0a, 0x16, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x67,
	0x75, 0x72, 0x75, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x14, 0x9a, 0x84, 0x9e, 0x03, 0x0f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x43, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x11, 0x9a,
	0x84, 0x9e, 0x03, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84,
	0x9e, 0x03, 0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2d, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb1, 0x07, 0x0a, 0x15, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x42, 0x2d, 0x9a, 0x84, 0x9e, 0x03, 0x28, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x5f, 0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x49, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x9a,
	0x84, 0x9e, 0x03, 0x2b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x3e, 0x9a, 0x84, 0x9e, 0x03, 0x39, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x74, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3c, 0x9a, 0x84,
	0x9e, 0x03, 0x37, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x03, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x32, 0x9a, 0x84, 0x9e, 0x03,
	0x2d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x08, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x38, 0x9a, 0x84,
	0x9e, 0x03, 0x33, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x48, 0x06, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x79, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x07, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd1, 0x06,
	0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x9a, 0x84, 0x9e, 0x03, 0x2b, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3e,
	0x9a, 0x84, 0x9e, 0x03, 0x39, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x01,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x74, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3c, 0x9a, 0x84, 0x9e, 0x03, 0x37, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x32, 0x9a, 0x84, 0x9e, 0x03, 0x2d, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x38, 0x9a, 0x84, 0x9e, 0x03, 0x33, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x48, 0x04, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x79, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x3a, 0x9a, 0x84, 0x9e, 0x03,
	0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x06, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xd6, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x22, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x19, 0x9a, 0x84, 0x9e, 0x03, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x22, 0xfa, 0x06, 0x0a, 0x18, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x2d, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x49, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30,
	0x9a, 0x84, 0x9e, 0x03, 0x2b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x3e, 0x9a, 0x84, 0x9e, 0x03, 0x39, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x74, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3c, 0x9a,
	0x84, 0x9e, 0x03, 0x37, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x02, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x32, 0x9a, 0x84, 0x9e,
	0x03, 0x2d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x08, 0x69,
	0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x38, 0x9a,
	0x84, 0x9e, 0x03, 0x33, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x04, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x48, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x79, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x06, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0x9a, 0x84, 0x9e, 0x03, 0x14, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xfa, 0x06, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e,
	0x03, 0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2d, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x9a, 0x84, 0x9e, 0x03, 0x2b, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3e, 0x9a, 0x84,
	0x9e, 0x03, 0x39, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x01, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x74,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x3c, 0x9a, 0x84, 0x9e, 0x03, 0x37, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x48, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x32, 0x9a, 0x84, 0x9e, 0x03, 0x2d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x38, 0x9a, 0x84, 0x9e, 0x03, 0x33, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48,
	0x04, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x3a, 0x9a,
	0x84, 0x9e, 0x03, 0x35, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x3a, 0x9a, 0x84, 0x9e, 0x03, 0x35, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x48, 0x06, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xd5, 0x02, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a,
	0x84, 0x9e, 0x03, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x75,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x22, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x18,
	0x9a, 0x84, 0x9e, 0x03, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0x9a,
	0x84, 0x9e, 0x03, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19,
	0x9a, 0x84, 0x9e, 0x03, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2d, 0x22, 0x20, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x01, 0x0a,
	0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03,
	0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x18,
	0x9a, 0x84, 0x9e, 0x03, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe6, 0x03, 0x0a, 0x1d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0xe9, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x67, 0x75, 0x72, 0x75, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x8c, 0x01, 0x0a, 0x1d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x80,
	0x01, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x50, 0x01,
	0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x73,
	0x6c, 0x65, 0x79, 0x77, 0x75, 0x2f, 0x72, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_videocollection_service_proto_video_collection_repo_proto_rawDescOnce sync.Once
	file_app_videocollection_service_proto_video_collection_repo_proto_rawDescData = file_app_videocollection_service_proto_video_collection_repo_proto_rawDesc
)

func file_app_videocollection_service_proto_video_collection_repo_proto_rawDescGZIP() []byte {
	file_app_videocollection_service_proto_video_collection_repo_proto_rawDescOnce.Do(func() {
		file_app_videocollection_service_proto_video_collection_repo_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_videocollection_service_proto_video_collection_repo_proto_rawDescData)
	})
	return file_app_videocollection_service_proto_video_collection_repo_proto_rawDescData
}

var file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_app_videocollection_service_proto_video_collection_repo_proto_goTypes = []interface{}{
	(*VideoCollectionCountReq)(nil),       // 0: proto.VideoCollectionCountReq
	(*VideoCollectionCountRes)(nil),       // 1: proto.VideoCollectionCountRes
	(*VideoCollectionOneReq)(nil),         // 2: proto.VideoCollectionOneReq
	(*VideoCollectionOneRes)(nil),         // 3: proto.VideoCollectionOneRes
	(*VideoCollectionListReq)(nil),        // 4: proto.VideoCollectionListReq
	(*VideoCollectionListRes)(nil),        // 5: proto.VideoCollectionListRes
	(*VideoCollectionGetReq)(nil),         // 6: proto.VideoCollectionGetReq
	(*VideoCollectionGetRes)(nil),         // 7: proto.VideoCollectionGetRes
	(*VideoCollectionCreateReq)(nil),      // 8: proto.VideoCollectionCreateReq
	(*VideoCollectionCreateRes)(nil),      // 9: proto.VideoCollectionCreateRes
	(*VideoCollectionUpdateReq)(nil),      // 10: proto.VideoCollectionUpdateReq
	(*VideoCollectionUpdateRes)(nil),      // 11: proto.VideoCollectionUpdateRes
	(*VideoCollectionUpsertReq)(nil),      // 12: proto.VideoCollectionUpsertReq
	(*VideoCollectionUpsertRes)(nil),      // 13: proto.VideoCollectionUpsertRes
	(*VideoCollectionDeleteReq)(nil),      // 14: proto.VideoCollectionDeleteReq
	(*VideoCollectionDeleteRes)(nil),      // 15: proto.VideoCollectionDeleteRes
	(*VideoCollectionDeleteMultiReq)(nil), // 16: proto.VideoCollectionDeleteMultiReq
	(*VideoCollectionDeleteMultiRes)(nil), // 17: proto.VideoCollectionDeleteMultiRes
	(*anypb.Any)(nil),                     // 18: google.protobuf.Any
	(*query.PropertyFilter)(nil),          // 19: goguru.query.PropertyFilter
	(*VideoCollectionItem)(nil),           // 20: proto.VideoCollectionItem
	(*query.PageRequest)(nil),             // 21: goguru.query.PageRequest
	(*query.PageInfo)(nil),                // 22: goguru.query.PageInfo
	(*types.ObjectID)(nil),                // 23: goguru.types.ObjectID
	(enum.ContentType)(0),                 // 24: proto.ContentType
	(enum.FilterType)(0),                  // 25: proto.FilterType
	(*timestamppb.Timestamp)(nil),         // 26: google.protobuf.Timestamp
}
var file_app_videocollection_service_proto_video_collection_repo_proto_depIdxs = []int32{
	18, // 0: proto.VideoCollectionCountReq.id:type_name -> google.protobuf.Any
	18, // 1: proto.VideoCollectionCountReq.name:type_name -> google.protobuf.Any
	18, // 2: proto.VideoCollectionCountReq.contentType:type_name -> google.protobuf.Any
	18, // 3: proto.VideoCollectionCountReq.filterType:type_name -> google.protobuf.Any
	18, // 4: proto.VideoCollectionCountReq.count:type_name -> google.protobuf.Any
	18, // 5: proto.VideoCollectionCountReq.isOnline:type_name -> google.protobuf.Any
	18, // 6: proto.VideoCollectionCountReq.createdAt:type_name -> google.protobuf.Any
	18, // 7: proto.VideoCollectionCountReq.updatedAt:type_name -> google.protobuf.Any
	19, // 8: proto.VideoCollectionCountReq.extraFilters:type_name -> goguru.query.PropertyFilter
	18, // 9: proto.VideoCollectionOneReq.id:type_name -> google.protobuf.Any
	18, // 10: proto.VideoCollectionOneReq.name:type_name -> google.protobuf.Any
	18, // 11: proto.VideoCollectionOneReq.contentType:type_name -> google.protobuf.Any
	18, // 12: proto.VideoCollectionOneReq.filterType:type_name -> google.protobuf.Any
	18, // 13: proto.VideoCollectionOneReq.count:type_name -> google.protobuf.Any
	18, // 14: proto.VideoCollectionOneReq.isOnline:type_name -> google.protobuf.Any
	18, // 15: proto.VideoCollectionOneReq.createdAt:type_name -> google.protobuf.Any
	18, // 16: proto.VideoCollectionOneReq.updatedAt:type_name -> google.protobuf.Any
	19, // 17: proto.VideoCollectionOneReq.extraFilters:type_name -> goguru.query.PropertyFilter
	20, // 18: proto.VideoCollectionOneRes.item:type_name -> proto.VideoCollectionItem
	18, // 19: proto.VideoCollectionListReq.id:type_name -> google.protobuf.Any
	18, // 20: proto.VideoCollectionListReq.name:type_name -> google.protobuf.Any
	18, // 21: proto.VideoCollectionListReq.contentType:type_name -> google.protobuf.Any
	18, // 22: proto.VideoCollectionListReq.filterType:type_name -> google.protobuf.Any
	18, // 23: proto.VideoCollectionListReq.count:type_name -> google.protobuf.Any
	18, // 24: proto.VideoCollectionListReq.isOnline:type_name -> google.protobuf.Any
	18, // 25: proto.VideoCollectionListReq.createdAt:type_name -> google.protobuf.Any
	18, // 26: proto.VideoCollectionListReq.updatedAt:type_name -> google.protobuf.Any
	19, // 27: proto.VideoCollectionListReq.extraFilters:type_name -> goguru.query.PropertyFilter
	21, // 28: proto.VideoCollectionListReq.pageRequest:type_name -> goguru.query.PageRequest
	22, // 29: proto.VideoCollectionListRes.pageInfo:type_name -> goguru.query.PageInfo
	20, // 30: proto.VideoCollectionListRes.items:type_name -> proto.VideoCollectionItem
	23, // 31: proto.VideoCollectionGetRes.id:type_name -> goguru.types.ObjectID
	24, // 32: proto.VideoCollectionGetRes.contentType:type_name -> proto.ContentType
	25, // 33: proto.VideoCollectionGetRes.filterType:type_name -> proto.FilterType
	26, // 34: proto.VideoCollectionGetRes.createdAt:type_name -> google.protobuf.Timestamp
	26, // 35: proto.VideoCollectionGetRes.updatedAt:type_name -> google.protobuf.Timestamp
	24, // 36: proto.VideoCollectionCreateReq.contentType:type_name -> proto.ContentType
	25, // 37: proto.VideoCollectionCreateReq.filterType:type_name -> proto.FilterType
	26, // 38: proto.VideoCollectionCreateReq.createdAt:type_name -> google.protobuf.Timestamp
	26, // 39: proto.VideoCollectionCreateReq.updatedAt:type_name -> google.protobuf.Timestamp
	24, // 40: proto.VideoCollectionUpdateReq.contentType:type_name -> proto.ContentType
	25, // 41: proto.VideoCollectionUpdateReq.filterType:type_name -> proto.FilterType
	26, // 42: proto.VideoCollectionUpdateReq.createdAt:type_name -> google.protobuf.Timestamp
	26, // 43: proto.VideoCollectionUpdateReq.updatedAt:type_name -> google.protobuf.Timestamp
	24, // 44: proto.VideoCollectionUpsertReq.contentType:type_name -> proto.ContentType
	25, // 45: proto.VideoCollectionUpsertReq.filterType:type_name -> proto.FilterType
	26, // 46: proto.VideoCollectionUpsertReq.createdAt:type_name -> google.protobuf.Timestamp
	26, // 47: proto.VideoCollectionUpsertReq.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 48: proto.VideoCollectionDeleteMultiReq.id:type_name -> google.protobuf.Any
	18, // 49: proto.VideoCollectionDeleteMultiReq.name:type_name -> google.protobuf.Any
	18, // 50: proto.VideoCollectionDeleteMultiReq.contentType:type_name -> google.protobuf.Any
	18, // 51: proto.VideoCollectionDeleteMultiReq.filterType:type_name -> google.protobuf.Any
	18, // 52: proto.VideoCollectionDeleteMultiReq.count:type_name -> google.protobuf.Any
	18, // 53: proto.VideoCollectionDeleteMultiReq.isOnline:type_name -> google.protobuf.Any
	18, // 54: proto.VideoCollectionDeleteMultiReq.createdAt:type_name -> google.protobuf.Any
	18, // 55: proto.VideoCollectionDeleteMultiReq.updatedAt:type_name -> google.protobuf.Any
	19, // 56: proto.VideoCollectionDeleteMultiReq.extraFilters:type_name -> goguru.query.PropertyFilter
	57, // [57:57] is the sub-list for method output_type
	57, // [57:57] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_app_videocollection_service_proto_video_collection_repo_proto_init() }
func file_app_videocollection_service_proto_video_collection_repo_proto_init() {
	if File_app_videocollection_service_proto_video_collection_repo_proto != nil {
		return
	}
	file_app_videocollection_service_proto_video_collection_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionCountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionOneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionOneRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionCreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionUpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionUpsertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionUpsertRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionDeleteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionDeleteMultiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCollectionDeleteMultiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_videocollection_service_proto_video_collection_repo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_videocollection_service_proto_video_collection_repo_proto_goTypes,
		DependencyIndexes: file_app_videocollection_service_proto_video_collection_repo_proto_depIdxs,
		MessageInfos:      file_app_videocollection_service_proto_video_collection_repo_proto_msgTypes,
	}.Build()
	File_app_videocollection_service_proto_video_collection_repo_proto = out.File
	file_app_videocollection_service_proto_video_collection_repo_proto_rawDesc = nil
	file_app_videocollection_service_proto_video_collection_repo_proto_goTypes = nil
	file_app_videocollection_service_proto_video_collection_repo_proto_depIdxs = nil
}
